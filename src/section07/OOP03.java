package section07;

/*JVM (Java Virtural Machine)
 *	 자바 어플리케이션을 실행하기 위한 가상 머신.
 *		JVM은 운영체제와 자바 어플리케이션 사이 중계자 역할을 한다.
 * 
 * JVM 메모리 구조
 * 1.메서드 영역  또는  클래스 영역(class)
 * 	JVM이 실행하는 어플리케이션 사용되는 클래스 정보 저장.
 * 	JVM이 시작될 때 클래스 로더에 의해 로드되며, 모든 스레드(main이 여러개)를 공유.
 * 	
 * Method Area (프로그램 실행 전에 미리 올리고 프로그램 끝나기 전까지 살아잇음.)
 * - 프로그램 실행 코드
 * - Stactic Area
 * - Constant Pool (모든 상수)
 * 
 * 2. 힙 영역
 * 	객체 인스턴트가 저장되는 영역, 동적(본인이 만들수있음)으로 생성된 객체들이 할당된다.
 * 
 * Heap Area - 참조형 변수 (객체를 안쓸때 자동으로 지워짐.)
 * 				Method 영역을 받음(주소값)
 * 
 * 3. 스택 영역
 * 	메서드 호출과 관련된 정보(로컬변수, 매개변수, 메서드 호출 등) 저장.
 * 	각 스레드마다 별도의 스택이 생성된다.
 * 
 * Stack Area - Heap영역을 받음(주소값)
 * 먼저 들어온 값이 아래로 ~ 제일 나중에 들어온 값이 위로 (거꾸로 쌓임 / 나중에 들어온거 부터 사라짐.)
 *
 * 4. pc 레지스터 (program counter register)
 * 	현재 실행 중인 명령어의 주소를 가리키는 포인터
 * 
 * 5. 네이티브 메서드 스택 (Native Method Stack)
 * 	자바 코드 외부의 네이티브 코드(c,c++ 등)를 실행할 때 사용.
 * 
 * 가비지 컬렉터 ( Garbage Collector) - 자바의 장점.
 * 
 * 	자바 프로그램 동적으로 할당한 메모리 중 더이상 사용하지 않는
 * 	객체를 자동으로 탐지하고 제거하는 JVM 구성요소.
 * 
 *  
 *  
 */

public class OOP03 {

}
